1. set Mod Button to window
2. patch autostart to auto run some script
3. patch alpha
  + Allow dwm to have translucent bars, while keeping all the text on it opaque, just like the alpha-patch for st
4. patch fullscreen
  + Applies the monocle layout with the focused client on top and hides the bar. When pressed again, shows the bar and restores the layout that was active before going fullscreen.
5. patch pertag
  + This patch keeps layout, mwfact, barpos and nmaster per tag.
6. patch viewontag
  + Follow a window to the tag it is being moved to.
7. patch scratchpad
  + The scratchpad patch allows you to spawn or restore a floating terminal window. It is usually useful to have one to do some short typing.
  + Don't know what is XK_grave, so change XK_g
8. patch uselessgap
  + For aesthetic purposes, this patch:

	+ adds "useless gaps" around windows
    + removes everything (gaps and borders) when in monocle mode for aesthetic purpose.
9. patch awesomebar
  + This patch changes the taskbar to be more like awesome. To be specific, it:

    + shows all tasks in the current tag in the taskbar at all times
    + clicking on an unfocused window's title in the taskbar focuses that window
    + clicking on a focused window's title in the taskbar hides that window
    + clicking on a hidden window's title in the taskbar unhides and focuses that window

  + You can also hide and unhide windows from the keyboard. The default bindings are:

    + M-j/M-k to cycle through the visible windows in the current workspace
    + M-J/M-K to cycle through all windows in the current workspace - hidden windows shown this way are re-hidden once focus is lost
    + M-h to hide the current active window
    + M-s to unhide a window made visible by M-J/M-K

  + Since this patch relies on knowing how big everything is in the taskbar, make sure to adjust the buttonpress()/drawbar() functions to account for any space in the taskbar used by other patches (such as systray).
  + For myself, M-s is uesless, so I disable it in config.h

10. set config.h font pixelsize; But there is a issue that ther nerd font icon is too small in menubar
  + https://github.com/Powerlevel9k/powerlevel9k/issues/430
    > Yeah basically as far as the ...Nerd Font Complete Mono fonts go those are just going to be smaller (except hopefully for powerline symbols - I'd have to check on that) so that they don't appear squished/stretched and scale appropriately.
    > The Nerd Fonts without the 'Mono' suffix should not have the 'too small' issue.
  + the Mono property make the icons smaller than real


